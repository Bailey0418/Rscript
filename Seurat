#1.多样本seurat.rds读入+合并
setwd("/```/")
library(Seurat)
D02P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/4/data/rds/YS2305041_DFU0002P/DFU0002P_seurat.rds")
D03P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0003P/DFU0003P_seurat.rds")
D04P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0004P/DFU0004P_seurat.rds")
D05P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0005P/DFU0005P_seurat.rds")
D06P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0006P/DFU0006P_seurat.rds")
ND04P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/1/data/rds/YS2309047_NNDFU0004P/NNDFU0004P_seurat.rds")
ND05P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/1/data/rds/YS2309047_NNDFU0005P/NNDFU0005P_seurat.rds")
ND13P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/1/data/rds/2310120_NNDFU0013p/NNDFU0013p_seurat.rds")
ND14P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/6/data/rds/2311282_NNDFU0014P/NNDFU0014P_seurat.rds")
tissue <- merge(D02P,y = c(D03P,D04P,D05P,D06P,ND04P,ND05P,ND13P,ND14P),
                 add.cell.ids = c("D02P","D03P","D04P","D05P","D06P","ND04P","ND05P","ND13P","ND14P"),
                 project = "PBMC56K",merge.data = TRUE)
tissue$sample <- sapply(X = strsplit(colnames(pbmc.P), split = "_"), FUN = "[", 1)
dim(tissue)
table(tissue@meta.data$sample)

#2.过滤细胞
library(ggplot2)
tissue[["percent.mt"]] <- PercentageFeatureSet(tissue, pattern = "^MT-")
tissue$log10GenesPerUMI <- log10(tissue$nFeature_RNA)/log10(tissue$nCount_RNA)
tissue <- subset(tissue,subset = nFeature_RNA > 200&nFeature_RNA < 6000&percent.mt < 10&log10GenesPerUMI > 0.8)
plot1 <- VlnPlot(tissue, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3,group.by = "orig.ident")
ggsave("filter_cell_vlnplot.pdf", plot = plot1, width = 10, height = 10)

plot1 <- FeatureScatter(tissue, feature1 = "nCount_RNA", feature2 = "percent.mt",group.by = "orig.ident")
plot2 <- FeatureScatter(tissue, feature1 = "nCount_RNA", feature2 = "nFeature_RNA",group.by = "orig.ident")
plot3 <- plot1 + plot2
ggsave("filter_cell_FeatureScatter.pdf", plot = plot3, width = 20, height = 10)
#3.数据标准化
tissue <- NormalizeData(tissue, normalization.method = "LogNormalize", scale.factor = 10000)
tissue <- FindVariableFeatures(tissue, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(tissue), 10)
plot1 <- VariableFeaturePlot(tissue)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot3  <- plot1 + plot2
ggsave("Normalize_VariableFeaturePlot.pdf", plot = plot3, width = 20, height = 10)

all.genes <- rownames(tissue)
tissue <- ScaleData(tissue, features = all.genes)
tissue <- RunPCA(tissue, features = VariableFeatures(object = tissue))
plot4 <- VizDimLoadings(tissue, dims = 1:2, reduction = "pca")
ggsave("RunPCA_VizDimLoadings.pdf", plot = plot4, width = 20,height = 10)
plot5 <- DimPlot(tissue, reduction = "pca", group.by = "orig.ident")
ggsave("RunPCA_DimPlot.pdf", plot = plot5, width = 10,height = 10)
plot6 <- ElbowPlot(tissue)
ggsave("RunPCA_ElbowPlot.pdf", plot = plot6, width = 10,height = 10)

tissue <- FindNeighbors(tissue, dims = 1:30)#一般都取1：30
tissue <- FindClusters(tissue, resolution = 0.5)#resolution可更改
head(Idents(tissue), 5)
tissue <- RunUMAP(tissue, dims = 1:30)
plot7 <- DimPlot(tissue, reduction = "umap", label = TRUE, repel = TRUE)#可切换为tsne图
ggsave("RunUMAP_DimPlot.pdf", plot = plot7, width = 10, height = 10)#切换为tsne图之后记得改文件名
plot8 <- DimPlot(tissue, reduction = "umap", group.by = "sample")#同上一步
ggsave("RunUMAP_sample_DimPlot.pdf", plot = plot8, width = 10, height = 10)

#4.去批次效应
library(harmony)
tissue <- RunHarmony(tissue, reduction = "pca", group.by.vars = "sample", reduction.save = "harmony")
tissue <- RunUMAP(tissue, reduction = "harmony", dims = 1:30, reduction.name = "umap")
tissue <- FindNeighbors(tissue, reduction = "harmony", dims = 1:30)
tissue <- FindClusters(tissue, resolution = 0.5)
plot1 <- DimPlot(tissue, reduction = "umap",group.by = "sample", label = F,repel = TRUE)
plot2 <- DimPlot(tissue, reduction = "umap", label = T,repel = TRUE)
plot3 <- plot1 + plot2
ggsave("RunHarmony_umap_DimPlot.pdf", plot = plot3, width = 20, height = 10)
saveRDS(tissue,"tissue.rds")

#5.计算marker基因并绘制热图
markers <- FindAllMarkers(tissue, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
library(dplyr)
top20 <- markers %>% group_by(cluster) %>% top_n(n = 20, wt = avg_log2FC)
write.csv(top20,"cluster_top20_marker.csv")
plot1 <- DoHeatmap(tissue, features = top_gene_names, group.by = "ident") +
                   scale_fill_gradientn(colors = c("blue", "white", "red")) +
                   theme_minimal() +
                   theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  
                   axis.text.y = element_text(size = 10)) +  
                   labs(title = "Top Differential Genes by Cell Type")
ggsave("cluster_top20_marker_heatmap.pdf", plot = plot1, width = 8, height = 6)

#6.细胞注释（一般使用cellmarker注释，即手动注释后整理输入注释信息）
new.cluster.ids <- c("Monocyte", "Monocyte","T cell", "T cell","T cell","T cell","Monocyte","B cell","Monocyte","Monocyte","T cell","Monocyte","T cell",
                     "Basophil","Monocyte","Megakaryocyte","T cell","B cell","Monocyte","T cell","T cell","T cell","Neutrophil","B cell")#按顺序依次输入
names(new.cluster.ids) <- levels(tissue)
pbmc.P <- RenameIdents(tissue, new.cluster.ids)
plot1 <- DimPlot(tissue, reduction = "umap", label = TRUE)
ggsave("celltype_umap_DimPlot.pdf", plot = plot1, width = 10, height = 10)

 #绘制细胞类型分组数据柱形图
tissue$celltype <- Idents(tissue)
cell_count <- tissue@meta.data %>% group_by(source, celltype) %>% summarise(count = n())  # 统计每个组合的数量
cell_count <- cell_count %>% group_by(source) %>% mutate(total = sum(count), proportion = count / total)  # 计算每个细胞类型的占比
plot2 <- ggplot(cell_count, aes(x = celltype, y = proportion, fill = source)) +  
                geom_bar(stat = "identity", position = "dodge") +  # 设置position = "dodge"实现分组柱形图
                scale_fill_manual(values = c("D" = "lightcoral", "N" = "lightblue")) +  # 手动设置颜色
                labs(title = "Cell Composition by Source (D vs N)", 
                x = "Cell Type", y = "Proportion", fill = "Source") +  # 设置标题和轴标签
                theme(axis.text.x = element_text(angle = 45, hjust = 1))  # 调整x轴标签角度
ggsave("celltype_number.pdf", plot = plot2, width = 5, height = 5)
