#1.查看数据质量
 #FastQC
fastqc -t 6 -o out_path sample1_1.fq sample1_2.fq #conda运行，
 #-o --outdir:输出路径；--extract：结果文件解压缩；--noextract：结果文件压缩；-f --format:输入文件格式.支持bam,sam,fastq文件格式；-t --threads:线程数；-c --contaminants：制定污染序列，文件格式 name[tab]sequence；
 #-a --adapters：指定接头序列，文件格式name[tab]sequence；-k --kmers：指定kmers长度（2-10bp,默认7bp）；-q --quiet：安静模式

#2.去接头和低质量序列（忽略）

#3.再次查看数据质量（忽略）

#4.读取并比对（STAR；如果使用hisat2进行比对会生成SAM文件）
 #（1）构建基因组索引，运行的star和构建索引的star版本要保持一致
STAR --runThreadN 25 \
     --runMode genomeGenerate \
     --genomeDir /mnt/raid5/User/bailin/project/240701SDUTCM.DiabeticFeet/250107/STAR/index \
     --genomeFastaFiles /mnt/raid5/User/bailin/Document_of_match_and_annotation/Fastq/genomeFastaFiles/Homo_sapiens.GRCh38.fa \
     --sjdbGTFfile /mnt/raid5/User/bailin/Document_of_match_and_annotation/Fastq/sjdbGTFfile/Homo_sapiens.GRCh38.113.gtf \
     --sjdbOverhang 149
#--runThreadN：线程数；--runMode genomeGenerate：构建基因组索引；--genomeDir：索引目录。（index_dir一定要是存在的文件夹，需提前建好）；--genomeFastaFiles：基因组文件；--sjdbGTFfile：基因组注释文件；--sjdbOverhang：reads长度减1。
 #（2）计算内含子长度（R中：GenomicRanges和rtracklayer;不换参考基因组就不用重新计算了）
library(GenomicRanges)
library(rtracklayer)
gtf_file <- "/mnt/raid5/User/bailin/Document_of_match_and_annotation/Fastq/sjdbGTFfile/Homo_sapiens.GRCh38.113.gtf"
gtf <- import(gtf_file)
exons <- gtf[gtf$type == "exon"]
head(exons)
genes <- gtf[gtf$type == "gene"]
introns <- setdiff(genes, exons)
head(introns)
intron_lengths <- width(introns)
min_intron_length <- min(intron_lengths, na.rm = TRUE)
max_intron_length <- max(intron_lengths, na.rm = TRUE)
cat("最短内含子长度：", min_intron_length, "bp\n")
cat("最长内含子长度：", max_intron_length, "bp\n")
 #（3）进行read比对
STAR \
    --genomeDir /mnt/raid5/User/bailin/project/240701SDUTCM.DiabeticFeet/250107/STAR/index \
     --runThreadN 25 \
    --readFilesIn /mnt/raid5/User/bailin/project/240701SDUTCM.DiabeticFeet/250107/RawData/SiRNA1999_1.fq.gz /mnt/raid5/User/bailin/project/240701SDUTCM.DiabeticFeet/250107/RawData/SiRNA1999_2.fq.gz \
    --readFilesCommand zcat \
    --outFileNamePrefix siRNA1999 \
    --outSAMtype BAM SortedByCoordinate \
    --outBAMsortingThreadN 25
 #--runThreadN 设置线程数
 #--runMode alignReads : 默认就是比对模式，可以不填写
 #--genomeDir: 索引文件夹
 #--readFilesIn FASTA/Q文件路径
 #--readFilesCommand zcat: 如果输入格式是gz结尾，那么需要加上zcat, 否则会报错
 #--outSAMtype: 输出SAM文件的格式，是否排序
 #--outBAMsortingThreadN: SAM排序成BAM时调用线程数
#6.BAM转化为count文件（featureCounts）
featureCounts -p -T 25 \
              -a /mnt/raid5/User/bailin/Document_of_match_and_annotation/Fastq/sjdbGTFfile/Homo_sapiens.GRCh38.113.gtf \
              -o featurecounts.txt /mnt/raid5/User/bailin/project/240701SDUTCM.DiabeticFeet/250107/STAR/BAM/*.sortedByCoord.out.bam
 #-T 8：使用 8 个线程 来加速处理。
 #-a /path/to/annotation.gtf：指定 GTF 文件。
 #-o counts.txt：输出文件名，counts.txt 会包含计数结果。
#7.只保留featurecounts.txt的【基因名】和【样本counts】
cat featurecounts.txt | cut -f1,7- > counts.txt
